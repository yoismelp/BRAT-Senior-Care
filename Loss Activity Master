Option Explicit
Sub Button1_Click()

    Dim AutoSv As Boolean
    
    'hardcode UploadID and unprotect
    Sheets("Export Data").Activate
    Range("B5").Copy
    Range("B5").PasteSpecial xlPasteValues
    ActiveSheet.Unprotect Password:=""
    Sheets("Loss Listing").Activate
    ActiveSheet.Unprotect Password:=""

    'If Val(Application.VERSION) > 15 Then
     '   AutoSv = ActiveWorkbook.AutoSaveOn
     '   If AutoSv Then ActiveWorkbook.AutoSaveOn = False
    '    AutoSv = ActiveWorkbook.AutoSaveOn
    'End If
    
    Sheets("Export Data").Visible = True
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    
    Dim wsName As String
        wsName = Application.ActiveSheet.Name
    Dim wbName As String
        wbName = Application.ActiveWorkbook.Name
    Dim CURRENT_USER As String
        CURRENT_USER = Application.UserName
    Dim TimeStamp As String
        TimeStamp = Format(Now(), "yyyyMMddhhmmss")
    Dim ENTRY_DATE As String
        ENTRY_DATE = Format(Now, "YYYYMMDD hh:mm:ss  AM/PM")
    Dim filePath As String
        filePath = Application.ActiveWorkbook.FullName
    
    ThisWorkbook.Worksheets("Risk Analysis").Activate
    
    Dim BRAT_NAME As String
        BRAT_NAME = Range("B5").Value
    Dim VERSION As String
        VERSION = Range("E7").Value
    
    Dim sharePointURL As String
    'DEV
        sharePointURL = "https://bowheadsi.sharepoint.com/sites/DevDataVault/Shared%20Documents/Policy%20Processing/BRAT%20-%20Losses%20Export/"
    'PROD
         'sharePointURL = "https://bowheadsi.sharepoint.com/sites/DataVault/Shared%20Documents/Policy%20Processing/BRAT%20-%20Losses%20Export/"
    
    'LossListingTable
    Application.StatusBar = "Starting LossListingTable"
    'LossListingTableHandler sharePointURL, BRAT_NAME, VERSION, "Loss Table"
    
    'AccountInfoTable
    Application.StatusBar = "Starting Account Info"
    'AccountInfoTableExportHandler ENTRY_DATE, CURRENT_USER, "AccountInfo", TimeStamp, sharePointURL, BRAT_NAME, VERSION
    
    'TowerTable
    Application.StatusBar = "Starting TowerTable"
    'DataExportHandler ENTRY_DATE, CURRENT_USER, "TowerTable", TimeStamp, sharePointURL, BRAT_NAME, VERSION
    
    'ExposureTable
    Application.StatusBar = "Starting ExposureTable"
    'ExposureTableExportHandler ENTRY_DATE, CURRENT_USER, "ExposureTable", TimeStamp, sharePointURL, BRAT_NAME, VERSION
    
    'LocationTable
    Application.StatusBar = "Starting LocationTable"
    DataExportHandler ENTRY_DATE, CURRENT_USER, "LocationTable", TimeStamp, sharePointURL, BRAT_NAME, VERSION
    
    Workbooks(wbName).Activate
    Worksheets(wsName).Select
    
    'If Val(Application.VERSION) > 15 Then
    '    ActiveWorkbook.AutoSaveOn = True
    '    AutoSv = ActiveWorkbook.AutoSaveOn
    'End If
    
    Application.EnableEvents = False
    ThisWorkbook.Worksheets("Export Data").Visible = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    
    Application.StatusBar = "COMPLETED - Data Export for SQL"
    
CatchError:
Sheets("Export Data").Activate
Range("B5").Formula = "=YEAR(UploadTime)&TEXT(MONTH(UploadTime),""00"")&TEXT(DAY(UploadTime),""00"")&TEXT(HOUR(UploadTime),""00"")&TEXT(MINUTE(UploadTime),""00"")&TEXT(SECOND(UploadTime),""00"")"
Sheets("Loss Listing").Protect Password:="Bowhead"
Application.ScreenUpdating = True

End Sub

Function AccountInfoTableExportHandler(EntryDate As String, EntryUser As String, TableName As String, TimeStamp As String, sharePointURL As String, BRAT_NAME As String, VERSION As String)
    Application.StatusBar = TableName + " Processing Account Info"
    ThisWorkbook.Worksheets("Export Data").Activate
    
    Dim headersRowNumber As Integer
        headersRowNumber = Range(TableName + "[[#Headers],['UploadID]]").Row
        
    Application.StatusBar = TableName + " Deleting columns if exist"
    Dim col As Variant

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryBy", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryDate", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("VariableValueExport", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    Range(TableName).Select
    'START Add EntryDate and EntryBy
    Application.StatusBar = TableName + " Adding columns for export"
    Selection.End(xlToRight).Offset(-1, 1).Activate
    
    ActiveCell.EntireColumn.Select

    Selection.Insert Shift:=xlToRight
    Selection.Insert Shift:=xlToRight
    Selection.Insert Shift:=xlToRight
    
    Range(TableName).Activate
    Selection.End(xlToRight).Offset(-1, 1).Activate
    
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "EntryBy"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "EntryDate"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "VariableValueExport"
    
    'Values
    Application.StatusBar = TableName + " Adding values to added columns"
    ActiveCell.Offset(1, -2).Activate
    ActiveCell.FormulaR1C1 = EntryUser
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    
    ActiveCell.Offset(0, 1).Activate
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = EntryDate
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    Selection.NumberFormat = "YYYYMMDD hh:mm:ss AM/PM"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "=IF(CELL(""format"", [@[Variable Value]])=""D4"", TEXT([@[Variable Value]], ""yyyy-MM-dd""), [@[Variable Value]])"
    
    'END Add EntryDate and EntryBy
    
    'START Save file
    Application.StatusBar = TableName + " Exporting and Saving file to SP"
    Range(TableName & "[#All]").Activate
    Selection.Copy
    Workbooks.Add
    
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.ListObjects.Add(xlSrcRange, Selection.CurrentRegion, , xlYes).Name = _
        "Table1"

    Application.DisplayAlerts = False
    
    ActiveWorkbook.SaveAs Filename:= _
        sharePointURL + TimeStamp + "_BRAT" + TableName + "_" + EntryUser + "_" + BRAT_NAME + "_" + VERSION + ".xlsx" _
        , FileFormat:=51
    
    ActiveWindow.Close
    
    'Remove EntryBy
    Application.StatusBar = TableName + " Removing added columns"
    Range(TableName & "[[#Headers],['EntryBy]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'Remove EntryTime
    Range(TableName & "[[#Headers],['EntryDate]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'Remove VariableValueExport
    Range(TableName & "[[#Headers],['VariableValueExport]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    
    'END Save file
End Function

Function ExposureTableExportHandler(EntryDate As String, EntryUser As String, TableName As String, TimeStamp As String, sharePointURL As String, BRAT_NAME As String, VERSION As String)
    ThisWorkbook.Worksheets("Export Data").Activate
    
    Application.StatusBar = TableName + " Deleting columns if exists"
    Dim headersRowNumber As Integer
    'Range(TableName + "[[#Headers],['UploadID]]").Select
        headersRowNumber = Range(TableName + "[[#Headers],['UploadID]]").Row
    Dim col As Variant

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryBy", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryDate", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("StartDateExport", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    Range(TableName).Select
    'START Add EntryDate and EntryBy
    Application.StatusBar = TableName + " Adding columns for export"
    Selection.End(xlToRight).Offset(-1, 1).Select
    
    ActiveCell.EntireColumn.Activate
   
    Selection.Insert Shift:=xlToRight
    Selection.Insert Shift:=xlToRight
    Selection.Insert Shift:=xlToRight
    
    Range(TableName).Activate
    Selection.End(xlToRight).Offset(-1, 1).Activate
    
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "EntryBy"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "EntryDate"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "StartDateExport"
    
    'Values
    Application.StatusBar = TableName + " Setting values for added columns"
    ActiveCell.Offset(1, -2).Activate
    ActiveCell.FormulaR1C1 = EntryUser
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    
    ActiveCell.Offset(0, 1).Activate
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = EntryDate
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    Selection.NumberFormat = "YYYYMMDD hh:mm:ss AM/PM"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "=TEXT([@[Start Date]], ""yyyyMMdd"")"
    'END Add EntryDate and EntryBy
    
    'Filter rows with data based on columns ExposureGroupName
    ActiveSheet.ListObjects(TableName).Range.AutoFilter Field:=3, _
        Criteria1:="<>0"

    'START Save file
    Application.StatusBar = TableName + " Saving table and exporting to SP"
    Range(TableName & "[#All]").Activate
    Selection.Copy
    Workbooks.Add
    
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.ListObjects.Add(xlSrcRange, Selection.CurrentRegion, , xlYes).Name = _
        "Table1"

    Application.DisplayAlerts = False
    
    ActiveWorkbook.SaveAs Filename:= _
        sharePointURL + TimeStamp + "_BRAT" + TableName + "_" + EntryUser + "_" + BRAT_NAME + "_" + VERSION + ".xlsx" _
        , FileFormat:=51
    
    ActiveWindow.Close
    
    'Remove filter on ExposureGroupName
    ActiveSheet.ListObjects(TableName).Range.AutoFilter Field:=3

    'Remove EntryBy
    Application.StatusBar = TableName + " Removing added columns"
    Range(TableName & "[[#Headers],['EntryBy]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'Remove EntryTime
    Range(TableName & "[[#Headers],['EntryDate]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'Remove Start Date Export
    Range(TableName & "[[#Headers],['StartDateExport]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'END Save file
End Function

Function DataExportHandler(EntryDate As String, EntryUser As String, TableName As String, TimeStamp As String, sharePointURL As String, BRAT_NAME As String, VERSION As String)
    ThisWorkbook.Worksheets("Export Data").Activate
    
    Application.StatusBar = TableName + " Removing added columns if exist"
    Dim headersRowNumber As Integer
    'Range(TableName + "[[#Headers],['UploadID]]").Select
        headersRowNumber = Range(TableName + "[[#Headers],['UploadID]]").Row
        
    Dim col As Variant
    
    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryBy", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Export Data") '<--| reference relevant worksheet
        col = Application.Match("EntryDate", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    Range(TableName).Activate
    'START Add EntryDate and EntryBy
    Application.StatusBar = TableName + " Adding columns for export"
    Selection.End(xlToRight).Offset(-1, 1).Activate
    
    ActiveCell.EntireColumn.Activate

    Selection.Insert Shift:=xlToRight
    Selection.Insert Shift:=xlToRight
    
    Range(TableName).Activate
    Selection.End(xlToRight).Offset(-1, 1).Activate
    
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "EntryBy"
    
    ActiveCell.Offset(0, 1).Activate
    ActiveCell.FormulaR1C1 = "EntryDate"
    
    'Values
    Application.StatusBar = TableName + " Setting values for added columns"
    ActiveCell.Offset(1, -1).Activate
    ActiveCell.FormulaR1C1 = EntryUser
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    
    ActiveCell.Offset(0, 1).Activate
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = EntryDate
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    Selection.NumberFormat = "YYYYMMDD hh:mm:ss AM/PM"
    'END Add EntryDate and EntryBy
    
    'FILTER LocationTable on Location Name <> 0
    If TableName = "LocationTable" Then
        ActiveSheet.ListObjects(TableName).Range.AutoFilter Field:=3, _
            Criteria1:="<>0"
    End If

    'START Save file
    Application.StatusBar = TableName + " Exporting table and saving to SP"
    Range(TableName & "[#All]").Activate
    Selection.Copy
    Workbooks.Add
    
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.ListObjects.Add(xlSrcRange, Selection.CurrentRegion, , xlYes).Name = _
        "Table1"

    Application.DisplayAlerts = False
    
    ActiveWorkbook.SaveAs Filename:= _
        sharePointURL + TimeStamp + "_BRAT" + TableName + "_" + EntryUser + "_" + BRAT_NAME + "_" + VERSION + ".xlsx" _
        , FileFormat:=51
    ActiveWindow.Close
    
    'Remove FILTER LocationTable on Location Name <> 0
    If TableName = "LocationTable" Then
        ActiveSheet.ListObjects(TableName).Range.AutoFilter Field:=3
    End If

    'Remove EntryBy
    Application.StatusBar = TableName + " Removing added columns"
    Range(TableName & "[[#Headers],['EntryBy]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'Remove EntryTime
    Range(TableName & "[[#Headers],['EntryDate]]").Activate
    ActiveCell.EntireColumn.Delete Shift:=xlToLeft
    'END Save file
End Function

Function LossListingTableHandler(sharePointURL As String, BRAT_NAME As String, VERSION As String, TableName As String)
    ThisWorkbook.Worksheets("Loss Listing").Activate
    ActiveSheet.ListObjects("LossTable").Range.AutoFilter Field:=14
    Application.Calculation = xlCalculationManual
    Range("C:M").EntireColumn.Hidden = False
    
    Dim CURRENT_USER As String
        CURRENT_USER = Application.UserName
    Dim TimeStamp As String
        TimeStamp = Format(Now(), "yyyyMMddhhmmss")
    Dim filePath As String
        filePath = Application.ActiveWorkbook.FullName
    Dim myColumn As ListColumn
    Range("LossTable[[#Headers],['UploadID]]").Offset(1, 0).Select
    Set myColumn = Sheets("Loss Listing").ListObjects("LossTable").ListColumns("Coverage")
    
    
    'START row count
    Application.StatusBar = "Counting rows in Loss Listing"
    Range("LossTable[[#Headers],['#]]").Activate
    Dim headersRowNumber As Integer
    headersRowNumber = ActiveCell.Row
    Range("LossTable[[#Headers],['UploadID]]").Offset(1, 0).Activate
    'To get number of rows populated using Coverage column as reference
    Dim UsedRows As Long
    UsedRows = Application.CountA(myColumn.DataBodyRange)
    'END row count
    
    'START Filter out blank rows based on Coverage
    Application.StatusBar = TableName + " Filter on Coverage not blank"
    ActiveSheet.ListObjects("LossTable").Range.AutoFilter Field:=14, Criteria1 _
        :="<>"
    'END Filter out blank rows based on Coverage
    Range("LossTable[[#Headers],['#]]").FormulaR1C1 = "BRATRowNumber"
    
    'START Remove Extra Columns if exists
    Application.StatusBar = TableName + " Remove added columns if exists"
    Dim col As Variant

    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("Evaluation Date Import", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With

    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("Report Date Import", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("Loss or Accident Date Import", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
     With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("Closed Date Import", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("Experience Date Import", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("EntryBy", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    
    With Sheets("Loss Listing") '<--| reference relevant worksheet
        col = Application.Match("EntryDate", .Rows(headersRowNumber), 0) '<--| try searching its row 1 for wanted header text
    If Not IsError(col) Then .Columns(col).Delete '<--| if found then delete its entire column
    End With
    'END Remove Extra Columns if exists
    
    'START Adding new columns
    Application.StatusBar = TableName + " Adding columns for export"
    'Headers
    Range("LossTable[[#Headers],['UploadID]]").Select
    Selection.End(xlToRight).Offset(0, 1).Select
    Application.CutCopyMode = False
        ActiveCell.FormulaR1C1 = "Evaluation Date Import"
    
    ActiveCell.Offset(0, 1).FormulaR1C1 = "Report Date Import"
    'ActiveCell.FormulaR1C1 = "Report Date Import"
    
    ActiveCell.Offset(0, 2).FormulaR1C1 = "Loss or Accident Date Import"
    'ActiveCell.FormulaR1C1 = "Loss or Accident Date Import"
    
    ActiveCell.Offset(0, 3).FormulaR1C1 = "Closed Date Import"
    'ActiveCell.FormulaR1C1 = "Closed Date Import"
    
    ActiveCell.Offset(0, 4).FormulaR1C1 = "Experience Date Import"
    'ActiveCell.FormulaR1C1 = "Experience Date Import"
    
    ActiveCell.Offset(0, 5).FormulaR1C1 = "EntryBy"
    'ActiveCell.FormulaR1C1 = "EntryBy"
    
    ActiveCell.Offset(0, 6).FormulaR1C1 = "EntryDate"
    'ActiveCell.FormulaR1C1 = "EntryDate"
    
    'Values
    Application.StatusBar = TableName + " Adding values to added columns"
    ActiveCell.Offset(1, 0).FormulaR1C1 = "=TEXT([@[Evaluation Date]], ""yyyyMMdd"")"
    'ActiveCell.FormulaR1C1 = "=TEXT([@[Evaluation Date]], ""yyyyMMdd"")"
    
    ActiveCell.Offset(1, 1).FormulaR1C1 = "=TEXT([@[Report Date]], ""yyyyMMdd"")"
    'ActiveCell.FormulaR1C1 = "=TEXT([@[Report Date]], ""yyyyMMdd"")"
    
    ActiveCell.Offset(1, 2).FormulaR1C1 = "=TEXT([@[Loss or Accident Date]], ""yyyyMMdd"")"
    'ActiveCell.FormulaR1C1 = "=TEXT([@[Loss or Accident Date Import]], ""yyyyMMdd"")"
     
    ActiveCell.Offset(1, 3).FormulaR1C1 = "=TEXT([@[Closed Date]], ""yyyyMMdd"")"
    'ActiveCell.FormulaR1C1 = "=TEXT([@[Closed Date Import]], ""yyyyMMdd"")"
    
    ActiveCell.Offset(1, 4).FormulaR1C1 = "=TEXT([@[Experience Date]], ""yyyyMMdd"")"
    'ActiveCell.FormulaR1C1 = "=TEXT([@[Experience Date Import]], ""yyyyMMdd"")"
    
    ActiveCell.Offset(1, 5).Activate
    ActiveCell.FormulaR1C1 = Application.UserName
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    
    ActiveCell.Offset(0, 1).Activate
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = Format(Now, "YYYYMMDD hh:mm:ss  AM/PM")
    ActiveCell.Select
    Selection.Copy
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Paste
    Selection.NumberFormat = "YYYYMMDD hh:mm:ss AM/PM"
    'END Adding new columns
    
    Application.StatusBar = TableName + " Exporting table and saving to SP"
    Range("LossTable[#All]").Copy
    
    'Selection.Copy
    Workbooks.Add
    'ActiveSheet.Paste
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.ListObjects.Add(xlSrcRange, Selection.CurrentRegion, , xlYes).Name = _
        "LossTable"
        
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveAs Filename:= _
        sharePointURL + TimeStamp + "_BRATForLosses_" + CURRENT_USER + "_" + BRAT_NAME + "_" + VERSION + "_" + CStr(UsedRows) + ".xlsx" _
        , FileFormat:=51
    
    ActiveWindow.Close
    
    'Remove EntryBy
    Application.StatusBar = TableName + " Removing added columns"
    Range("LossTable[[#Headers],['EntryDate]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove EntryTime
    Range("LossTable[[#Headers],['EntryBy]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove Evaluation Date Import
    Range("LossTable[[#Headers],['Evaluation Date Import]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove Report Date Import
    Range("LossTable[[#Headers],['Report Date Import]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove Loss or Accident Date Import
    Range("LossTable[[#Headers],['Loss or Accident Date Import]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove Closed Date Import
    Range("LossTable[[#Headers],['Closed Date Import]]").EntireColumn.Delete Shift:=xlToLeft
    'Remove Experience Date Import
    Range("LossTable[[#Headers],['Experience Date Import]]").EntireColumn.Delete Shift:=xlToLeft
    
    Range("LossTable[[#Headers],['BRATRowNumber]]").FormulaR1C1 = "#"
    ActiveSheet.ListObjects("LossTable").Range.AutoFilter Field:=14
    Range("C:M").EntireColumn.Hidden = True
End Function
