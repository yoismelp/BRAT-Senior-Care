Sub Button1_Click()
'Need to add this line and select worksheet we are going to be
    'pulling values from. In our case, it will be the DataCard
    Dim OVERALL_STATUS As String
    OVERALL_STATUS = Worksheets("ExportData").Range("P27").Value
    
    If OVERALL_STATUS = "OK" Then
        Worksheets("Cards Data Validation").Activate
        
        Dim reqUrl As String
        reqUrl = "https://prod-104.westus.logic.azure.com:443/workflows/ed9c6ddbe2b64ce1baebc380e51f16dd/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=dRECGk3KXiN-sUcxiXY96vg5GUciRzEs8DbwDjG_p7g"
        
        Dim indicatorOption_1 As String
        indicatorOption_1 = Worksheets("Risk Analysis").Range("L1256").Value
        Dim indicatorOption_2 As String
        indicatorOption_2 = Worksheets("Risk Analysis").Range("AB1256").Value
        Dim indicatorOption_3 As String
        indicatorOption_3 = Worksheets("Risk Analysis").Range("AR1256").Value
        
        Dim DQ As String
        DQ = """"
        Dim NL As String
        NL = vbNewLine
        Dim VT As String
        VT = vbTab
        
        Dim CURRENT_USER As String
        CURRENT_USER = Application.UserName
        
        Dim VERSION As String
        VERSION = Worksheets("Risk Analysis").Range("E7").Value
        
        Dim dt As Object, utc As Date
        Set dt = CreateObject("WbemScripting.SWbemDateTime")
        dt.SetVarDate Now
        utc = dt.GetVarDate(False)
        
        Dim json As String
        json = "{" & _
            DQ & "updatedBy" & DQ & ":" & DQ & CURRENT_USER & DQ & "," & _
            DQ & "updatedAt" & DQ & ":" & DQ & utc & DQ & "," & _
            DQ & "updatedComment" & DQ & ":" & DQ & "Comments here" & DQ & "," & _
                DQ & "BRAT" & DQ & ":{" & _
                DQ & "version" & DQ & ":" & DQ & VERSION & DQ & "," & _
                DQ & "name" & DQ & ":" & DQ & "SC" & DQ & _
                "}," & _
                DQ & "data" & DQ & ":[{"
                
        'Need to add Microsoft Scripting Runtime Reference
        Dim propsDict1 As Scripting.Dictionary
        'Set propsDict1 = New Dictionary
        
        Dim propsDict2 As Scripting.Dictionary
        'Set propsDict2 = New Dictionary
        
        Dim propsDict3 As Scripting.Dictionary
        'Set propsDict3 = New Dictionary
        
        Dim r As Range
        Dim iterator As Integer
        iterator = 0
        
        'START setting dictionaries to use for constructing the JSON data prop
        Set propsDict1 = GetOption(CStr(indicatorOption_1), "B7:B96")
        Debug.Print indicator
        Set propsDict2 = GetOption(CStr(indicatorOption_2), "E7:E96")
        Debug.Print indicator
        Set propsDict3 = GetOption(CStr(indicatorOption_3), "H7:H96")
        'END setting dictionaries to use for constructing the JSON data prop
        
        'START creating data part of JSON payload
        Dim data As String
        data = ""
        
        'Option 1 Loop
        If propsDict1.Count > 0 Then
            data = data & GetData(propsDict1) & ",{"
        End If
        'Option 2 Loop
        If propsDict2.Count > 0 Then
            data = data & GetData(propsDict2) & ",{"
        End If
        'Option 3 Loop
        If propsDict3.Count > 0 Then
            data = data & GetData(propsDict3) & ",{"
        End If
        'END creating data part of JSON payload
        
        'Remove last ,{ from data then
        'Add data for Option 1,2, and 3 to json
        If data <> "" Then
            data = Left(data, Len(data) - 2)
            json = json & data
        
            'Close data and master json opening
            json = json & "]}"
            json = Replace(json, vbLf, "")
            Range("B100").Value = json
            'Debug.Print json
        
            'API Call
            'Need to add Microsoft XML v6.0
            Dim req As New MSXML2.ServerXMLHTTP60
        
            Dim RESPONSE As String
        
            req.Open "POST", reqUrl, False
            req.setRequestHeader "Content-Type", "application/json"
        
            req.send json
        
            RESPONSE = req.responseText
        
                If req.Status <> 202 Then
                    MsgBox req.Status & " - " & req.StatusText
                    Worksheets("ExportData").Range("P29").Value = req.Status & " - " & req.StatusText
                    Worksheets("ExportData").Activate
                    Exit Sub
                Else
                    Worksheets("ExportData").Range("P29").Value = "Sent"
                End If
        End If
        Worksheets("ExportData").Activate
    Else
        MsgBox ("Data did not send as Overall Status is not OK")
        Worksheets("ExportData").Range("P29").Value = "Data did not send. Overall Status is not OK"
    End If
End Sub

Function GetData(props As Scripting.Dictionary) As String
    Dim data As String
    Dim DQ As String
    DQ = """"
    For i = 0 To props.Count - 1
        data = data & DQ & props.Keys()(i) & DQ & ":" & DQ & props.Items()(i) & DQ & ","
    Next i
    data = Left(data, Len(data) - 1)
    data = data & "}"
    GetData = data
End Function

Function GetOption(indicator As String, myRange As String) As Scripting.Dictionary
    Dim propsDict As Scripting.Dictionary
    Set propsDict = New Scripting.Dictionary
    Dim iterator As Integer
    iterator = 0
    
    If indicator = "Bound" Then
        For Each r In Range(myRange)
            If Not IsEmpty(r.Value) Or r.Value <> "Senior Care View" Then
                propsDict.Add r.Value, r.Offset(0, 1)
            End If
            iterator = iterator + 1
            If iterator >= 88 Then
                Exit For
            End If
        Next r
    End If
    
    Set GetOption = propsDict
End Function
