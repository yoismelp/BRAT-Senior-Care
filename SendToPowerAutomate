Sub Button1_Click()
'Need to add this line and select worksheet we are going to be
    'pulling values from. In our case, it will be the DataCard
    Dim OVERALL_STATUS As String
    OVERALL_STATUS = Worksheets("ExportData").Range("P27").Value
    Dim LAST_ROW_TO_READ As String
    LAST_ROW_TO_READ = Worksheets("SC JSON Helper").Range("E1").Value
    
    If OVERALL_STATUS = "OK" Then
        Worksheets("Cards Data Validation").Activate
        
        Dim reqUrl As String
        reqUrl = "https://prod-104.westus.logic.azure.com:443/workflows/ed9c6ddbe2b64ce1baebc380e51f16dd/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=dRECGk3KXiN-sUcxiXY96vg5GUciRzEs8DbwDjG_p7g"
        
        Dim indicatorOption_1 As String
        indicatorOption_1 = Worksheets("Risk Analysis").Range("L1256").Value
        Dim indicatorOption_2 As String
        indicatorOption_2 = Worksheets("Risk Analysis").Range("AB1256").Value
        Dim indicatorOption_3 As String
        indicatorOption_3 = Worksheets("Risk Analysis").Range("AR1256").Value
        
        Dim DQ As String
        DQ = """"
        Dim NL As String
        NL = vbNewLine
        Dim VT As String
        VT = vbTab
        
        Dim CURRENT_USER As String
        CURRENT_USER = Application.UserName
        
        Dim VERSION As String
        VERSION = Worksheets("Risk Analysis").Range("E7").Value
        
        Dim dt As Object, utc As Date
        Set dt = CreateObject("WbemScripting.SWbemDateTime")
        dt.SetVarDate Now
        utc = dt.GetVarDate(False)
        
        Dim json As String
        json = "{" & _
            DQ & "updatedBy" & DQ & ":" & DQ & CURRENT_USER & DQ & "," & _
            DQ & "updatedAt" & DQ & ":" & DQ & utc & DQ & "," & _
            DQ & "updatedComment" & DQ & ":" & DQ & DQ & "," & _
                DQ & "BRAT" & DQ & ":{" & _
                DQ & "version" & DQ & ":" & DQ & VERSION & DQ & "," & _
                DQ & "name" & DQ & ":" & DQ & "SC" & DQ & _
                "}," & _
                DQ & "data" & DQ & ":[{"
                
        'Need to add Microsoft Scripting Runtime Reference
        Dim propsDict1 As Scripting.Dictionary
        'Set propsDict1 = New Dictionary
        
        Dim propsDict2 As Scripting.Dictionary
        'Set propsDict2 = New Dictionary
        
        Dim propsDict3 As Scripting.Dictionary
        'Set propsDict3 = New Dictionary
        
        Dim r As Range
        Dim iterator As Integer
        iterator = 0
        
        'START setting dictionaries to use for constructing the JSON data prop
        Set propsDict1 = GetOption(CStr(indicatorOption_1), "B7:B", CInt(LAST_ROW_TO_READ))
        ''Debug.Print indicator
        Set propsDict2 = GetOption(CStr(indicatorOption_2), "E7:E", CInt(LAST_ROW_TO_READ))
        ''Debug.Print indicator
        Set propsDict3 = GetOption(CStr(indicatorOption_3), "H7:H", CInt(LAST_ROW_TO_READ))
        'END setting dictionaries to use for constructing the JSON data prop
        
        'START creating data part of JSON payload
        Dim data As String
        data = ""
        
        'Option 1 Loop
        Dim option1Status As String
        option1Status = ""
        If propsDict1.Count > 0 Then
            data = data & GetData(propsDict1, LAST_ROW_TO_READ, option1Status) & ",{"
        End If
        'Option 2 Loop
        Dim option2Status As String
        option2Status = ""
        If propsDict2.Count > 0 Then
            data = data & GetData(propsDict2, LAST_ROW_TO_READ, option2Status) & ",{"
        End If
        'Option 3 Loop
        Dim option3Status As String
        option3Status = ""
        If propsDict3.Count > 0 Then
            data = data & GetData(propsDict3, LAST_ROW_TO_READ, option3Status) & ",{"
        End If
        'END creating data part of JSON payload
        
        If option1Status <> "" Or option2Status <> "" Or option3Status <> "" Then
            'Set the Status for Option 1, 2, and 3 in Export Data and Overall Status to Invalid payload, see details below
            Worksheets("ExportData").Range("P29").Value = "Test. This part is still in development."
            Worksheets("ExportData").Range("P30").Value = option1Status
            Worksheets("ExportData").Range("P31").Value = option2Status
            Worksheets("ExportData").Range("P32").Value = option3Status
            Worksheets("ExportData").Activate
            Exit Sub
        End If
        
        'Remove last ,{ from data then
        'Add data for Option 1,2, and 3 to json
        If data <> "" Then
            data = Left(data, Len(data) - 2)
            json = json & data
        
            'Close data and master json opening
            json = json & "]}"
            json = Replace(json, vbLf, "")
            
            'This will make the generated JSON visible if need to troubleshoot
            Range("B" & CStr(CInt(LAST_ROW_TO_READ) + 2)).Value = json
            ''Debug.Print json
        
            'API Call
            'Need to add Microsoft XML v6.0
            Dim req As New MSXML2.ServerXMLHTTP60
        
            Dim RESPONSE As String
        
            req.Open "POST", reqUrl, False
            req.setRequestHeader "Content-Type", "application/json"
        
            req.send json
        
            RESPONSE = req.responseText
            Dim JsonResponse As Object
            Set JsonResponse = JsonConverter.ParseJson(RESPONSE)
            
            On Error GoTo APIResponse
                option1Status = option1Status & JsonResponse(1)("Status Value") 'append to option 1 status
                option2Status = option2Status & JsonResponse(2)("Status Value") 'append to option 2 status
                option3Status = option3Status & JsonResponse(3)("Status Value") 'append to option 3 status
APIResponse:
                If req.Status <> 200 Then
                    'MsgBox req.Status & " - " & req.StatusText
                    'Worksheets("ExportData").Range("P29").Value = req.Status & " - " & req.StatusText
                    Worksheets("ExportData").Range("P29").Value = "Test. This part is still in development."
                    Worksheets("ExportData").Activate
                    'Exit Function
                Else
                    '****************Uncomment when deploy to prod*************************
                    'Worksheets("ExportData").Range("P29").Value = "Sent"
                    Worksheets("ExportData").Range("P29").Value = "Test. This part is still in development."
                End If
                
                Worksheets("ExportData").Range("P30").Value = option1Status
                Worksheets("ExportData").Range("P31").Value = option2Status
                Worksheets("ExportData").Range("P32").Value = option3Status
        End If
        Worksheets("ExportData").Activate
    Else
                    '*************Uncomment when deploy to prod****************************
        'MsgBox ("Data did not send as Overall Status is not OK")
        'Worksheets("ExportData").Range("P29").Value = "Data did not send. Overall Status is not OK"
        Worksheets("ExportData").Range("P29").Value = "Failed. Not deployed to production yet."
    End If
End Sub

Function GetData(ByVal props As Scripting.Dictionary, ByVal lastRowNumber As Integer, ByRef optionStatus As String) As String
    Dim data As String
    Dim dataType As String
    Dim DQ As String
    DQ = """"
    For i = 0 To props.Count - 1
        dataType = CheckDataType(CStr(props.Keys()(i)), CStr(lastRowNumber))
        If dataType = "" Then
            Debug.Print props.Keys()(i) & " No Included in JSon"
        ElseIf dataType = "number" Or dataType = "currency" Then
            Debug.Print DQ & props.Keys()(i) & DQ & ":" & props.Items()(i)
            If props.Items()(i) = "" Then
                data = data & DQ & props.Keys()(i) & DQ & ":null,"
            ElseIf props.Items()(i) <> "" And IsNumeric(props.Items()(i)) Then
                data = data & DQ & props.Keys()(i) & DQ & ":" & props.Items()(i) & ","
            Else
                'MsgBox (props.Keys()(i) & " is expecting a " & dataType & " value but has this value instead: " & props.Items()(i))
                optionStatus = optionStatus + props.Keys()(i) & " is expecting a " & dataType & " value but has this value instead: " & props.Items()(i) & vbNewLine
            End If
        ElseIf dataType = "datetime" Then
            If props.Items()(i) = "" Then
                data = data & DQ & props.Keys()(i) & DQ & ":null,"
            ElseIf props.Items()(i) <> "" And IsDate(props.Items()(i)) Then
                data = data & DQ & props.Keys()(i) & DQ & ":" & DQ & CDate(props.Items()(i)) & DQ & ","
            Else
                'MsgBox (props.Keys()(i) & " is expecting a " & dataType & " value but has this value instead: " & props.Items()(i))
                optionStatus = optionStatus + props.Keys()(i) & " is expecting a " & dataType & " value but has this value instead: " & props.Items()(i) & vbNewLine
            End If
        Else 'other types not number, currency,datetime
            If props.Items()(i) = "" Then
                data = data & DQ & props.Keys()(i) & DQ & ":null,"
            Else
                data = data & DQ & props.Keys()(i) & DQ & ":" & DQ & props.Items()(i) & DQ & ","
            End If
            ''Debug.Print props.Keys()(i) & " "; dataType
        End If
    Next i
    data = Left(data, Len(data) - 1)
    data = data & "}"
    GetData = data
End Function

Function CheckDataType(fieldName As String, lastRowNumber As String) As String
    Dim dataType As String
    Set myRange = Worksheets("SC JSON Helper").Range("A2:B" & lastRowNumber)
    On Error GoTo Message
        CheckDataType = Application.WorksheetFunction.VLookup(fieldName, myRange, 2, False)
Message:
End Function

Function GetOption(indicator As String, myRange As String, lastRow As Integer) As Scripting.Dictionary
    Dim propsDict As Scripting.Dictionary
    Set propsDict = New Scripting.Dictionary
    Dim iterator As Integer
    iterator = 0
    
    If indicator = "Bound" Then
    
        For Each r In Range(myRange & CStr(lastRow)) 'setting dynamic range based on input number value in JSON Helper Tab
            If Not IsEmpty(r.Value) And r.Value <> "Senior Care View" And r.Value <> "" Then
                propsDict.Add r.Value, r.Offset(0, 1)
                'Debug.Print r.Value & " " & r.Offset(0, 1)
            End If
            iterator = iterator + 1
            If iterator >= lastRow Then
                Exit For
            End If
            'If r.Value = "END" Then
                'Exit For
            'End If
        Next r
    End If
    
    Set GetOption = propsDict
End Function
