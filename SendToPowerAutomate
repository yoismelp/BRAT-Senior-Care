Sub Sheet2_Button1_Click()
    'Need to add this line and select worksheet we are going to be
    'pulling values from. In our case, it will be the DataCard
    Worksheets("Sheet2").Activate
    
    Dim DQ As String
    DQ = """"
    Dim NL As String
    NL = vbNewLine
    Dim VT As String
    VT = vbTab
    
    Dim dt As Object, utc As Date
    Set dt = CreateObject("WbemScripting.SWbemDateTime")
    dt.SetVarDate Now
    utc = dt.GetVarDate(False)
    
    Dim json As String
    json = "{" & _
        DQ & "updatedBy" & DQ & ":" & DQ & "Yoismel Perez" & DQ & "," & _
        DQ & "updatedAt" & DQ & ":" & DQ & utc & DQ & "," & _
        DQ & "updatedComment" & DQ & ":" & DQ & "Comments here" & DQ & "," & _
            DQ & "BRAT" & DQ & ":{" & _
            DQ & "version" & DQ & ":" & DQ & "1.4" & DQ & "," & _
            DQ & "name" & DQ & ":" & DQ & "SC" & DQ & "," & _
            "}," & _
            DQ & "data" & DQ & ":[{"
            
    'Need to add Microsoft Scripting Runtime Reference
    Dim propsDict1 As Dictionary
    'Set propsDict1 = New Dictionary
    
    Dim propsDict2 As Dictionary
    'Set propsDict2 = New Dictionary
    
    Dim propsDict3 As Dictionary
    'Set propsDict3 = New Dictionary
    
    Dim r As Range
    Dim iterator As Integer
    iterator = 0
    Dim indicator As String
    indicator = Range("C7").Value
    
    'START setting dictionaries to use for constructing the JSON data prop
    Set propsDict1 = GetOption(CStr(indicator), "B7:B94")
    indicator = Range("F7").Value
    Set propsDict2 = GetOption(CStr(indicator), "E7:E94")
    indicator = Range("I7").Value
    Set propsDict3 = GetOption(CStr(indicator), "H7:H94")
    'END setting dictionaries to use for constructing the JSON data prop
    
    'START creating data part of JSON payload
    Dim data As String
    data = ""
    
    'Option 1 Loop
    If propsDict1.Count > 0 Then
        data = data & GetData(propsDict1)
    End If
    'Option 2 Loop
    If propsDict2.Count > 0 Then
        data = data & ",{" & GetData(propsDict2)
    End If
    'Option 3 Loop
    If propsDict3.Count > 0 Then
        data = data & ",{" & GetData(propsDict3)
    End If
    'END creating data part of JSON payload
    
    'Add data for Option one to json
    json = json & data
    
    'Close data and master json opening
    json = json & "]}"
    json = Replace(json, vbLf, "")
    Range("B96").Value = json
    Debug.Print json
    
    'API Call
    'Need to add Microsoft XML v6.0
    Dim req As New MSXML2.ServerXMLHTTP60
    Dim reqUrl As String
    Dim RESPONSE As String
    
    reqUrl = "https://prod-187.westus.logic.azure.com:443/workflows/d813eed078e049cd97a631b65a5cfd40/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QaG0VscfMxZrEbLZrGgavOza18adQKjsNkAtljRkKGE"
    
    req.Open "POST", reqUrl, False
    req.setRequestHeader "Content-Type", "application/json"
    
    req.send json
    
    RESPONSE = req.responseText
    
        If req.Status <> 202 Then
            MsgBox req.Status & " - " & req.statusText
        Exit Sub
        End If
End Sub

Function GetData(props As Dictionary) As String
    Dim data As String
    Dim DQ As String
    DQ = """"
    For i = 0 To props.Count - 1
        data = data & DQ & props.Keys()(i) & DQ & ":" & DQ & props.Items()(i) & DQ & ","
    Next i
    data = Left(data, Len(data) - 1)
    data = data & "}"
    GetData = data
End Function

Function GetOption(indicator As String, myRange As String) As Dictionary
    Dim propsDict As Dictionary
    Set propsDict = New Dictionary
    Dim iterator As Integer
    iterator = 0
    
    If indicator <> 0 Then
        For Each r In Range(myRange)
            If Not IsEmpty(r.Value) Or r.Value <> "Senior Care View" Then
                propsDict.Add r.Value, r.Offset(0, 1)
            End If
            iterator = iterator + 1
            If iterator >= 88 Then
                Exit For
            End If
        Next r
    End If
    
    Set GetOption = propsDict
End Function

Function CallApiFlow(data As String) As Integer
    Dim req As New MSXML2.ServerXMLHTTP60
    Dim env As String
    Dim reqUrl As String
    Dim allBody As String
    Dim newBody As String
    Dim RESPONSE As String
    
    reqUrl = Range("G8")
    
    req.Open "POST", reqUrl, False
    req.setRequestHeader "Content-Type", "application/json"
    
    req.send data
    
    CallApiFlow = req.Status
End Function
